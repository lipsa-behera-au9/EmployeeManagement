{"version":3,"sources":["redux/actions/index.js","redux/actions/authAction.js","components/header/Header.js","components/utils/notification/Notification.js","components/body/auth/Login.js","components/utils/validation/Validation.js","components/body/auth/Register.js","components/body/auth/ActivationEmail.js","components/utils/NotFound/NotFound.js","components/body/auth/ForgotPassword.js","components/body/auth/ResetPassword.js","redux/actions/usersAction.js","components/body/profile/Profile.js","components/body/profile/EditUser.js","components/body/home/Home.js","components/body/Body.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/tokenReducer.js","redux/reducers/usersReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ACTIONS","LOGIN","GET_TOKEN","GET_USER","GET_ALL_USERS","dispatchLogin","type","fetchUser","token","a","axios","get","headers","Authorization","res","Header","auth","useSelector","state","user","isLogged","handleLogout","localStorage","removeItem","window","location","href","transForm","transform","to","style","className","src","avatar","alt","name","onClick","showErrMsg","msg","showSuccessMsg","initialState","email","password","err","success","Login","useState","setUser","dispatch","useDispatch","history","useHistory","handleChangeInput","e","target","value","handleSubmit","preventDefault","post","data","setItem","push","response","onSubmit","htmlFor","placeholder","id","onChange","isEmpty","isEmail","test","isLength","length","isMatch","cf_password","Register","ActivationEmail","activation_token","useParams","setErr","setSuccess","useEffect","activationEmail","NotFound","ForgotPassword","setData","forgotPassword","ResetPassword","handleResetPass","fetchAllUsers","Profile","users","isAdmin","setAvatar","loading","setLoading","callback","setCallback","then","payload","dispatchGetAllUsers","handleChange","changeAvatar","file","files","size","formData","FormData","append","url","handleDelete","_id","confirm","delete","defaultValue","disabled","patch","updateInfor","updatePassword","overflowX","map","role","title","EditUser","editUser","setEditUser","checkAdmin","setCheckAdmin","num","setNum","forEach","handleUpdate","goBack","checked","Cards","Body","path","component","Home","exact","ForgotPass","ResetPass","App","getItem","getToken","access_token","dispatchGetUser","Boolean","hostname","match","authReducer","action","tokenReducer","usersReducer","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","DataProvider","children","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d739d131.chunk.js","sourcesContent":["const ACTIONS = {\n    LOGIN: 'LOGIN',\n    GET_TOKEN: 'GET_TOKEN',\n    GET_USER: 'GET_USER',\n    GET_ALL_USERS: 'GET_ALL_USERS'\n}\n\nexport default ACTIONS","import ACTIONS from './index'\nimport axios from 'axios'\n\nexport const dispatchLogin = () => {\n    return {\n        type: ACTIONS.LOGIN\n    }\n}\n\nexport const fetchUser = async (token) => {\n    const res = await axios.get('/user/infor', {\n        headers: {Authorization: token}\n    })\n    return res\n}\n\nexport const dispatchGetUser = (res) => {\n    return {\n        type: ACTIONS.GET_USER,\n        payload: {\n            user: res.data,\n            isAdmin: res.data.role === 1 ? true : false\n        }\n    }\n}","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction Header() {\n\n  const auth = useSelector((state) => state.auth);\n\n  const { user, isLogged } = auth;\n\n  const handleLogout = async () => {\n    try {\n      await axios.get(\"/user/logout\");\n      localStorage.removeItem(\"firstLogin\");\n      window.location.href = \"/\";\n    } catch (err) {\n      window.location.href = \"/\";\n    }\n  };\n\n  const userLink = () => {\n    return (\n      <li className=\"drop-nav\">\n        <Link to=\"#\" className=\"avatar\">\n          <img src={user.avatar} alt=\"\" /> {user.name}{\" \"}\n          <i className=\"fas fa-angle-down\"></i>\n        </Link>\n        <ul className=\"dropdown\">\n          <li>\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li>\n            <Link to=\"/\" onClick={handleLogout}>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </li>\n    );\n  };\n\n  const transForm = {\n    transform: isLogged ? \"translateY(-5px)\" : 0,\n  };\n\n  return (\n    <header>\n      <h2>\n        <Link to=\"/\">Employee Management</Link>\n      </h2>\n      <ul style={transForm}>\n        {isLogged ? (\n          userLink()\n        ) : (\n          <li>\n            <Link to=\"/login\">\n              <i className=\"fas fa-user\"></i> Sign in\n            </Link>\n          </li>\n        )}\n      </ul>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport './notification.css'\n\nexport const showErrMsg = (msg) => {\n    return <div className=\"errMsg\">{msg}</div>\n}\n\nexport const showSuccessMsg = (msg) => {\n    return <div className=\"successMsg\">{msg}</div>\n}","import React, {useState} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\nimport {dispatchLogin} from '../../../redux/actions/authAction'\nimport {useDispatch} from 'react-redux'\n\n\n\nconst initialState = {\n    email: '',\n    password: '',\n    err: '',\n    success: ''\n}\n\nfunction Login() {\n    const [user, setUser] = useState(initialState)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const {email, password, err, success} = user\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setUser({...user, [name]:value, err: '', success: ''})\n    }\n\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        try {\n            const res = await axios.post('/user/login', {email, password})\n            setUser({...user, err: '', success: res.data.msg})\n\n            localStorage.setItem('firstLogin', true)\n\n            dispatch(dispatchLogin())\n            history.push(\"/\")\n\n        } catch (err) {\n            err.response.data.msg && \n            setUser({...user, err: err.response.data.msg, success: ''})\n        }\n    }\n\n    return (\n        <div className=\"login_page\">\n            <h2>Login</h2>\n            {err && showErrMsg(err)}\n            {success && showSuccessMsg(success)}\n\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"text\" placeholder=\"Enter email address\" id=\"email\"\n                    value={email} name=\"email\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" placeholder=\"Enter password\" id=\"password\"\n                    value={password} name=\"password\" onChange={handleChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <button type=\"submit\">Login</button>\n                    <Link to=\"/forgot_password\">Forgot your password?</Link>\n                </div>\n            </form>\n\n\n            <p>New to Employee Management? <Link to=\"/register\">Register</Link></p>\n        </div>\n    )\n}\n\nexport default Login\n","export const isEmpty = value => {\n    if(!value) return true\n    return false\n}\n\nexport const isEmail = email => {\n    // eslint-disable-next-line\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport const isLength = password => {\n    if(password.length < 6) return true\n    return false\n}\n\nexport const isMatch = (password, cf_password) => {\n    if(password === cf_password) return true\n    return false\n}","import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\nimport {isEmpty, isEmail, isLength, isMatch} from '../../utils/validation/Validation'\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction Register() {\n    const [user, setUser] = useState(initialState)\n\n    const {name, email, password,cf_password, err, success} = user\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setUser({...user, [name]:value, err: '', success: ''})\n    }\n\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if(isEmpty(name) || isEmpty(password))\n                return setUser({...user, err: \"Please fill in all fields.\", success: ''})\n\n        if(!isEmail(email))\n            return setUser({...user, err: \"Invalid emails.\", success: ''})\n\n        if(isLength(password))\n            return setUser({...user, err: \"Password must be at least 6 characters.\", success: ''})\n        \n        if(!isMatch(password, cf_password))\n            return setUser({...user, err: \"Password did not match.\", success: ''})\n\n        try {\n            const res = await axios.post('/user/register', {\n                name, email, password\n            })\n\n            setUser({...user, err: '', success: res.data.msg})\n        } catch (err) {\n            err.response.data.msg && \n            setUser({...user, err: err.response.data.msg, success: ''})\n        }\n    }\n\n    return (\n        <div className=\"login_page\">\n            <h2>Register</h2>\n            {err && showErrMsg(err)}\n            {success && showSuccessMsg(success)}\n\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" placeholder=\"Enter your name\" id=\"name\"\n                    value={name} name=\"name\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"text\" placeholder=\"Enter email address\" id=\"email\"\n                    value={email} name=\"email\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" placeholder=\"Enter password\" id=\"password\"\n                    value={password} name=\"password\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"cf_password\">Confirm Password</label>\n                    <input type=\"password\" placeholder=\"Confirm password\" id=\"cf_password\"\n                    value={cf_password} name=\"cf_password\" onChange={handleChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <button type=\"submit\">Register</button>\n                </div>\n            </form>\n\n            <p>Already an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n    )\n}\n\nexport default Register\n","import React, {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\n\nfunction ActivationEmail() {\n    const {activation_token} = useParams()\n    const [err, setErr] = useState('')\n    const [success, setSuccess] = useState('')\n\n    useEffect(() => {\n        if(activation_token){\n            const activationEmail = async () => {\n                try {\n                    const res = await axios.post('/user/activation', {activation_token})\n                    setSuccess(res.data.msg)\n                } catch (err) {\n                    err.response.data.msg && setErr(err.response.data.msg)\n                }\n            }\n            activationEmail()\n        }\n    },[activation_token])\n\n    return (\n        <div className=\"active_page\">\n            {err && showErrMsg(err)}\n            {success && showSuccessMsg(success)}\n        </div>\n    )\n}\n\nexport default ActivationEmail\n","import React from 'react'\n\nfunction NotFound() {\n    return (\n        <div>\n            404 | Not Found\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {isEmail} from '../../utils/validation/Validation'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\n\nconst initialState = {\n    email: '',\n    err: '',\n    success: ''\n}\n\nfunction ForgotPassword() {\n    const [data, setData] = useState(initialState)\n\n    const {email, err, success} = data\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err: '', success: ''})\n    }\n\n    const forgotPassword = async () => {\n        if(!isEmail(email))\n            return setData({...data, err: 'Invalid emails.', success: ''})\n            \n        try {\n            const res = await axios.post('/user/forgot', {email})\n\n            return setData({...data, err: '', success: res.data.msg})\n        } catch (err) {\n            err.response.data.msg && setData({...data, err:  err.response.data.msg, success: ''})\n        }\n    }\n    \n    return (\n        <div className=\"fg_pass\">\n            <h2>Forgot Your Password?</h2>\n\n            <div className=\"row\">\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n\n                <label htmlFor=\"email\">Enter your email address</label>\n                <input type=\"email\" name=\"email\" id=\"email\" value={email}\n                onChange={handleChangeInput} />\n                <button onClick={forgotPassword}>Verify your email</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword\n ","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useParams} from 'react-router-dom'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\nimport {isLength, isMatch} from '../../utils/validation/Validation'\n\n\nconst initialState = {\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction ResetPassword() {\n    const [data, setData] = useState(initialState)\n    const {token} = useParams()\n\n    const {password, cf_password, err, success} = data\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err: '', success: ''})\n    }\n\n\n    const handleResetPass = async () => {\n        if(isLength(password))\n            return setData({...data, err: \"Password must be at least 6 characters.\", success: ''})\n\n        if(!isMatch(password, cf_password))\n            return setData({...data, err: \"Password did not match.\", success: ''})\n        \n        try {\n            const res = await axios.post('/user/reset', {password}, {\n                headers: {Authorization: token}\n            })\n\n            return setData({...data, err: \"\", success: res.data.msg})\n\n        } catch (err) {\n            err.response.data.msg && setData({...data, err: err.response.data.msg, success: ''})\n        }\n        \n    }\n\n\n    return (\n        <div className=\"fg_pass\">\n            <h2>Reset Your Password</h2>\n\n            <div className=\"row\">\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\n                onChange={handleChangeInput} />\n\n                <label htmlFor=\"cf_password\">Confirm Password</label>\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\n                onChange={handleChangeInput} />         \n\n                <button onClick={handleResetPass}>Reset Password</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPassword\n","import ACTIONS from './index'\nimport axios from 'axios'\n\nexport const fetchAllUsers = async (token) => {\n    const res = await axios.get('/user/all_infor', {\n        headers: {Authorization: token}\n    })\n    return res\n}\n\nexport const dispatchGetAllUsers = (res) => {\n    return {\n        type: ACTIONS.GET_ALL_USERS,\n        payload: res.data\n    }\n}","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isLength, isMatch} from '../../utils/validation/Validation'\nimport {showSuccessMsg, showErrMsg} from '../../utils/notification/Notification'\nimport {fetchAllUsers, dispatchGetAllUsers} from '../../../redux/actions/usersAction'\n\nconst initialState = {\n    name: '',\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction Profile() {\n    const auth = useSelector(state => state.auth)\n    const token = useSelector(state => state.token)\n\n    const users = useSelector(state => state.users)\n\n    const {user, isAdmin} = auth\n    const [data, setData] = useState(initialState)\n    const {name, password, cf_password, err, success} = data\n\n    const [avatar, setAvatar] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [callback, setCallback] = useState(false)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(isAdmin){\n            fetchAllUsers(token).then(res =>{\n                dispatch(dispatchGetAllUsers(res))\n            })\n        }\n    },[token, isAdmin, dispatch, callback])\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err:'', success: ''})\n    }\n\n    const changeAvatar = async(e) => {\n        e.preventDefault()\n        try {\n            const file = e.target.files[0]\n\n            if(!file) return setData({...data, err: \"No files were uploaded.\" , success: ''})\n\n            if(file.size > 1024 * 1024)\n                return setData({...data, err: \"Size too large.\" , success: ''})\n\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\n                return setData({...data, err: \"File format is incorrect.\" , success: ''})\n\n            let formData =  new FormData()\n            formData.append('file', file)\n\n            setLoading(true)\n            const res = await axios.post('/api/upload_avatar', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n\n            setLoading(false)\n            setAvatar(res.data.url)\n            \n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const updateInfor = () => {\n        try {\n            axios.patch('/user/update', {\n                name: name ? name : user.name,\n                avatar: avatar ? avatar : user.avatar\n            },{\n                headers: {Authorization: token}\n            })\n\n            setData({...data, err: '' , success: \"Updated Success!\"})\n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const updatePassword = () => {\n        if(isLength(password))\n            return setData({...data, err: \"Password must be at least 6 characters.\", success: ''})\n\n        if(!isMatch(password, cf_password))\n            return setData({...data, err: \"Password did not match.\", success: ''})\n\n        try {\n            axios.post('/user/reset', {password},{\n                headers: {Authorization: token}\n            })\n\n            setData({...data, err: '' , success: \"Updated Success!\"})\n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const handleUpdate = () => {\n        if(name || avatar) updateInfor()\n        if(password) updatePassword()\n    }\n\n    const handleDelete = async (id) => {\n        try {\n            if(user._id !== id){\n                if(window.confirm(\"Are you sure you want to delete this account?\")){\n                    setLoading(true)\n                    await axios.delete(`/user/delete/${id}`, {\n                        headers: {Authorization: token}\n                    })\n                    setLoading(false)\n                    setCallback(!callback)\n                }\n            }\n            \n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    return (\n        <>\n        <div>\n            {err && showErrMsg(err)}\n            {success && showSuccessMsg(success)}\n            {loading && <h3>Loading.....</h3>}\n        </div>\n        <div className=\"profile_page\">\n            <div className=\"col-left\">\n                <h2>{isAdmin ? \"Admin Profile\": \"User Profile\"}</h2>\n\n                <div className=\"avatar\">\n                    <img src={avatar ? avatar : user.avatar} alt=\"\"/>\n                    <span>\n                        <i className=\"fas fa-camera\"></i>\n                        <p>Change</p>\n                        <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" defaultValue={user.name}\n                    placeholder=\"Your name\" onChange={handleChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\n                    placeholder=\"Your email address\" disabled />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">New Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\"\n                    placeholder=\"Your password\" value={password} onChange={handleChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"cf_password\">Confirm New Password</label>\n                    <input type=\"password\" name=\"cf_password\" id=\"cf_password\"\n                    placeholder=\"Confirm password\" value={cf_password} onChange={handleChange} />\n                </div>\n\n\n                <button disabled={loading} onClick={handleUpdate}>Update</button>\n            </div>\n\n            <div className=\"col-right\">\n                <h2>{isAdmin ? \"Users\" : \"My data\"}</h2>\n\n                <div style={{overflowX: \"auto\"}}>\n                    <table className=\"customers\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Admin</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>\n                                            {\n                                                user.role === 1\n                                                ? <i className=\"fas fa-check\" title=\"Admin\"></i>\n                                                : <i className=\"fas fa-times\" title=\"User\"></i>\n                                            }\n                                        </td>\n                                        <td>\n                                            <Link to={`/edit_user/${user._id}`}>\n                                                <i className=\"fas fa-edit\" title=\"Edit\"></i>\n                                            </Link>\n                                            <i className=\"fas fa-trash-alt\" title=\"Remove\"\n                                            onClick={() => handleDelete(user._id)} ></i>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Profile\n","import React, {useState, useEffect} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport axios from 'axios'\nimport {showSuccessMsg, showErrMsg} from '../../utils/notification/Notification'\n\n\nfunction EditUser() {\n    const {id} = useParams()\n    const history = useHistory()\n    const [editUser, setEditUser] = useState([])\n\n    const users = useSelector(state => state.users)\n    const token = useSelector(state => state.token)\n\n    const [checkAdmin, setCheckAdmin] = useState(false)\n    const [err, setErr] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [num, setNum] = useState(0)\n\n    useEffect(() => {\n        if(users.length !== 0){\n            users.forEach(user => {\n                if(user._id === id){\n                    setEditUser(user)\n                    setCheckAdmin(user.role === 1 ? true : false)\n                }\n            })\n        }else{\n            history.push('/profile')\n        }\n    },[users, id, history])\n\n    const handleUpdate = async () => {\n        try {\n            if(num % 2 !== 0){\n                const res = await axios.patch(`/user/update_role/${editUser._id}`, {\n                    role: checkAdmin ? 1 : 0\n                }, {\n                    headers: {Authorization: token}\n                })\n\n                setSuccess(res.data.msg)\n                setNum(0)\n            }\n        } catch (err) {\n            err.response.data.msg && setErr(err.response.data.msg)\n        }\n    }\n\n    const handleCheck = () => {\n        setSuccess('')\n        setErr('')\n        setCheckAdmin(!checkAdmin)\n        setNum(num + 1)\n    }\n\n    return (\n        <div className=\"profile_page edit_user\">\n            <div className=\"row\">\n                <button onClick={() => history.goBack()} className=\"go_back\">\n                    <i className=\"fas fa-long-arrow-alt-left\"></i> Go Back\n                </button>\n            </div>\n\n            <div className=\"col-left\">\n                <h2>Edit User</h2>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" defaultValue={editUser.name} disabled/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" defaultValue={editUser.email} disabled />\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"checkbox\" id=\"isAdmin\" checked={checkAdmin}\n                    onChange={handleCheck} />\n                    <label htmlFor=\"isAdmin\">isAdmin</label>\n                </div>\n\n                <button onClick={handleUpdate}>Update</button>\n\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n            </div>\n        </div>\n    )\n}\n\nexport default EditUser\n","import React, { useState, useMemo } from \"react\";\nimport \"./home.css\";\n\nfunction Cards() {\n\n  return (\n    <>\n      <br />\n      <h1>Welcome to Employee Management System</h1>\n    </>\n  );\n}\n\nexport default Cards;\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ActivationEmail from './auth/ActivationEmail'\nimport NotFound from '../utils/NotFound/NotFound'\nimport ForgotPass from '../body/auth/ForgotPassword'\nimport ResetPass from '../body/auth/ResetPassword'\nimport Profile from '../body/profile/Profile'\nimport EditUser from '../body/profile/EditUser'\nimport Home from '../body/home/Home';\nimport {useSelector} from 'react-redux'\n\nfunction Body() {\n    const auth = useSelector(state => state.auth)\n    const {isLogged, isAdmin} = auth\n    return (\n        <section>\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n\n                <Route path=\"/login\" component={isLogged ? NotFound : Login} exact />\n                <Route path=\"/register\" component={isLogged ? NotFound : Register} exact />\n\n                <Route path=\"/forgot_password\" component={isLogged ? NotFound : ForgotPass} exact />\n                <Route path=\"/user/reset/:token\" component={isLogged ? NotFound : ResetPass} exact />\n\n                <Route path=\"/user/activate/:activation_token\" component={ActivationEmail} exact />\n\n                <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\n                <Route path=\"/edit_user/:id\" component={isAdmin ? EditUser : NotFound} exact />\n\n            </Switch>\n        </section>\n    )\n}\n\nexport default Body\n","import React, {useEffect} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {dispatchLogin, fetchUser, dispatchGetUser} from './redux/actions/authAction'\n\nimport Header from './components/header/Header'\nimport Body from './components/body/Body';\nimport axios from 'axios';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.token)\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin')\n    if(firstLogin){\n      const getToken = async () => {\n        const res = await axios.post('/user/refresh_token', null)\n        dispatch({type: 'GET_TOKEN', payload: res.data.access_token})\n      }\n      getToken()\n    }\n  },[auth.isLogged, dispatch])\n\n  useEffect(() => {\n    if(token){\n      const getUser = () => {\n        dispatch(dispatchLogin())\n\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n    }\n  },[token, dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ACTIONS from '../actions/'\n\nconst initialState = {\n    user: [],\n    isLogged: false,\n    isAdmin: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ACTIONS.LOGIN:\n            return {\n                ...state,\n                isLogged: true\n            }\n        case ACTIONS.GET_USER:\n            return {\n                ...state,\n                user: action.payload.user,\n                isAdmin: action.payload.isAdmin\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import ACTIONS from '../actions/'\n\nconst token = ''\n\nconst tokenReducer = (state = token, action) => {\n    switch(action.type){\n        case ACTIONS.GET_TOKEN:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default tokenReducer","import ACTIONS from '../actions/'\n\nconst users =[]\n\nconst usersReducer = (state = users, action) => {\n    switch(action.type){\n        case ACTIONS.GET_ALL_USERS:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default usersReducer","import {combineReducers} from 'redux'\nimport auth from './authReducer'\nimport token from './tokenReducer'\nimport users from './usersReducer'\n\nexport default combineReducers({\n    auth,\n    token,\n    users\n})","import React from 'react'\nimport {createStore} from 'redux'\nimport rootReducer from './reducers/'\nimport {Provider} from 'react-redux'\n\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nfunction DataProvider({children}) {\n    return (\n        <Provider store={store}>\n            {children}\n        </Provider>\n    )\n}\n\nexport default DataProvider\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport DataProvider from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}